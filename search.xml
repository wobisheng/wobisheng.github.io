<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>35mm定焦cctv监控头体验</title>
    <url>/2021/02/25/35mm%E5%AE%9A%E7%84%A6cctv%E7%9B%91%E6%8E%A7%E5%A4%B4%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<h1 id="35mm-cctv监控头体验"><a href="#35mm-cctv监控头体验" class="headerlink" title="35mm cctv监控头体验"></a>35mm cctv监控头体验</h1><p>新的一年已经过去了，当然要好好奖励一下自己，随意翻着淘宝，想给自己看一个合适的E口头，转了半天，也没找到什么合适的</p>
<p>18-105 f4 95新 2450</p>
<p>18-135 f3.5-5.6 95新 2480</p>
<p>55-210 f4.5-f6.3 95新 700</p>
<p>突然看见了 35 f1.6 cctv 全新 120 就冲这个价格，买回来玩玩也可以，下单付钱，一气呵成</p>
<h2 id="0-收货"><a href="#0-收货" class="headerlink" title="0.收货"></a>0.收货</h2><p>镜头的外观很漂亮，黑色的镜头很有质感，先过一遍外观</p>
<p>
        <span class="lazyload-img-span">
        <img   
           data-src="https://img.imgdb.cn/item/6037402f5f4313ce25e0c9ba.jpg" >
        </sapn>
      </p>
<p>
        <span class="lazyload-img-span">
        <img   
           data-src="https://img.imgdb.cn/item/6037402f5f4313ce25e0c9d1.jpg" >
        </sapn>
      </p>
<h2 id="1-试拍"><a href="#1-试拍" class="headerlink" title="1.试拍"></a>1.试拍</h2><p>因为是全手动头，光圈环和对焦环都是需要自己调节的，阻尼的大小也不错，拧起来很舒服，如果不是知道他的价格，仅凭外观很难想象这只是一颗100多块钱的头</p>
<p>不加对焦环，最近对焦距离为0.5米，实测感觉差不多，打开相机，打开峰值对焦，峰值水平高，关掉检测镜头拍照，愉快的拍摄时间开始</p>
<p>
        <span class="lazyload-img-span">
        <img   
           data-src="https://img.imgdb.cn/item/6037402f5f4313ce25e0c9c4.jpg" >
        </sapn>
      </p>
<blockquote>
<p>35mm f1.6 cctv iso100 1/200s (图片经过一些调色处理) </p>
</blockquote>
<p>在拍摄近景时，这颗头的表现还算不错，但是当把注意力转移到边缘的时候可以发现散焦区域有很明显的偏移，边缘画质欠佳，仔细观察中心，在焦平面的画质还算看得过去，如果抛开边缘画质不说，背景的奶化也挺不错，但是当拍摄画面为大场景时，如下图</p>
<p>
        <span class="lazyload-img-span">
        <img   
           data-src="https://img.imgdb.cn/item/60373f8a5f4313ce25dfb333.jpg" >
        </sapn>
      </p>
<blockquote>
<p>35mm f1.6 cctv iso200 1/2500s (图片经过一些调色处理) </p>
</blockquote>
<p>
        <span class="lazyload-img-span">
        <img   
           data-src="https://img.imgdb.cn/item/60373fc35f4313ce25e01a41.jpg" >
        </sapn>
      </p>
<blockquote>
<p>35mm f1.6 cctv iso100 1/2500s (图片经过一些调色处理)</p>
</blockquote>
<p>就可以很明显的看出边缘基本不能用，猛一看反而有一种移轴的味道，倒是也别有一番风味，当拍摄近距离物体时，如果不开最大光圈，猛一看真的看不出来边缘极差的画质，下面是一些样片</p>
<p>
        <span class="lazyload-img-span">
        <img   
           data-src="https://img.imgdb.cn/item/60373fc55f4313ce25e01c2e.jpg" >
        </sapn>
      </p>
<blockquote>
<p>35mm f2 cctv iso200 1/4000s (图片经过一些调色处理) </p>
</blockquote>
<p>
        <span class="lazyload-img-span">
        <img   
           data-src="https://img.imgdb.cn/item/60373fbf5f4313ce25e012bc.jpg" >
        </sapn>
      </p>
<blockquote>
<p>35mm f1.6 cctv iso200 1/1000s (图片经过一些调色处理)</p>
</blockquote>
<p>
        <span class="lazyload-img-span">
        <img   
           data-src="https://img.imgdb.cn/item/60373fc75f4313ce25e01eba.jpg" >
        </sapn>
      </p>
<blockquote>
<p>35mm f2 cctv iso200 1/1000s (图片经过一些调色处理)</p>
</blockquote>
<p>
        <span class="lazyload-img-span">
        <img   
           data-src="https://img.imgdb.cn/item/60374af75f4313ce25f05bbc.jpg" >
        </sapn>
      </p>
<blockquote>
<p>35mm f2 cctv iso100 1/250s (图片经过一些调色处理)</p>
</blockquote>
<h2 id="2-总结"><a href="#2-总结" class="headerlink" title="2.总结"></a>2.总结</h2><p>总的来讲，这颗头的画质确实不是很好，但是在这个价位体验大光圈的乐趣还是足够了的，看看这100多块钱的价格，咦，画质怎么突然变好了呢</p>
]]></content>
      <tags>
        <tag>体验,评测</tag>
      </tags>
  </entry>
  <entry>
    <title>55-210长焦镜头体验</title>
    <url>/2021/04/10/55-210%E9%95%BF%E7%84%A6%E9%95%9C%E5%A4%B4%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<h1 id="55-210平民狗头体验"><a href="#55-210平民狗头体验" class="headerlink" title="55-210平民狗头体验"></a>55-210平民狗头体验</h1><blockquote>
<p>这些日子特别想要一个长焦，但是E口的镜头一般不便宜，nex转接环加性价比较高的美能达是一个不错的选择，但是美能达毕竟是老镜头，18-105或者18-135即使在二手平台上也不便宜，18-200确实便宜，但是已经有18-55了，仔细对比还是55-210最香，价格也只是18-200的一半，虽然大家都说画质肉，但是其作为原生E口长焦，和600的价格实在是很香了。</p>
</blockquote>
<h2 id="0-开箱"><a href="#0-开箱" class="headerlink" title="0.开箱"></a>0.开箱</h2><p>先看看外观</p>
<p>
        <span class="lazyload-img-span">
        <img   
           data-src="https://img.imgdb.cn/item/60703cd78322e6675c5c77e1.jpg" >
        </sapn>
      </p>
<p>整个镜头的大小不算小，加上遮光罩有20厘米左右，银色的镜头没有黑色的好看，但是价格却比黑色的便宜不少，实用主义者还是选择银色好点</p>
<p>
        <span class="lazyload-img-span">
        <img   
           data-src="https://img.imgdb.cn/item/60703cd58322e6675c5c75fa.jpg" >
        </sapn>
      </p>
<p>镜头不是恒定光圈，最大光圈f4.5，支持光学防抖，焦段55-210，等效83-315，废话就不多说了，参数网上都有，下面来看看样片</p>
<h2 id="1-样片"><a href="#1-样片" class="headerlink" title="1.样片"></a>1.样片</h2><p>首先来看看中老年人摄影</p>
<p>
        <span class="lazyload-img-span">
        <img   
           data-src="https://img.imgdb.cn/item/60703cd58322e6675c5c75fd.jpg" >
        </sapn>
      </p>
<blockquote>
<p>光圈:f/6.3    曝光时间:1/200    ISO:200    焦段:210 图片经过后期处理</p>
</blockquote>
<p>总的来讲210焦段能在这个水平，还是很不错的，不放大看细节，总体很完美，但是仔细看会发现月球的细节基本看不见，边缘色散有些严重，对得起600的价格</p>
<p>
        <span class="lazyload-img-span">
        <img   
           data-src="https://img.imgdb.cn/item/60703cd58322e6675c5c7603.jpg" >
        </sapn>
      </p>
<blockquote>
<p>光圈:f/5.6    曝光时间:1/800    ISO:200    焦段:142 图片经过后期处理</p>
</blockquote>
<p>这张照片我自认为拍的挺好的，55-210这个头在中焦段的表现还是不错的，焦外奶化也还可以，焦内虽说不能和G头比但是还算锐利</p>
<p>
        <span class="lazyload-img-span">
        <img   
           data-src="https://img.imgdb.cn/item/60703cd58322e6675c5c760b.jpg" >
        </sapn>
      </p>
<blockquote>
<p>光圈:f/6.3    曝光时间:1/400    ISO:2500    焦段:210 图片经过后期处理</p>
</blockquote>
<p>这张焦外就挺完美的虽说是f/6.3的光圈，但是在210焦段景深就非常完美了，但是仔细看边缘，色散还是较为严重</p>
<p>
        <span class="lazyload-img-span">
        <img   
           data-src="https://img.imgdb.cn/item/60703cd58322e6675c5c7615.jpg" >
        </sapn>
      </p>
<blockquote>
<p>光圈:f/6.3    曝光时间:1/400    ISO:2500    焦段:210 图片经过后期处理</p>
</blockquote>
<p>老年人打鸟，效果还不错</p>
<h2 id="2-总结"><a href="#2-总结" class="headerlink" title="2.总结"></a>2.总结</h2><p>总的来讲，这颗头的性价比还是挺不错的，是一个对于索尼E口相机练手的长焦镜头，即使以后要换镜头，出掉倒也不心疼.</p>
]]></content>
      <tags>
        <tag>体验,评测</tag>
      </tags>
  </entry>
  <entry>
    <title>Python日记(二)</title>
    <url>/2021/05/24/Python%E6%97%A5%E8%AE%B0-%E4%BA%8C/</url>
    <content><![CDATA[<h1 id="python日记-二"><a href="#python日记-二" class="headerlink" title="python日记(二)"></a>python日记(二)</h1><pre><code class="python">import urllib
import urllib.request
import re

def send(url):
    head=&#123;
    &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36 Edg/90.0.818.56&quot;
    &#125;
    request = urllib.request.Request(url,headers = head)
    response = urllib.request.urlopen(request).read()
    match(response)

def match(content):
    con = re.findall(&#39;&lt;div class=&quot;title&quot;&gt;[^&gt;]*&gt;[^&gt;]*&gt;\n([^&lt;]*)&lt;&#39;,content.decode(&quot;utf-8&quot;))
    for i in con:
        try:
            match = re.match(&#39;[\s]&#123;2,&#125;(.*)[\s]&#123;2,&#125;&#39;,i)
            print(match.string,end=&quot;&quot;)
        except Exception as result:
            print(&quot;&quot;)

if __name__ == &quot;__main__&quot;:
    for page in range(0,250,25):
        send(&quot;https://www.douban.com/doulist/240962/?start=%d&amp;sort=seq&amp;playable=0&amp;sub_type=&quot;%page)
</code></pre>
<p>​        最近学习了用python爬虫去爬取豆瓣“电影排行前100”的界面，初步学习了正则表达式(还是有许多不足不懂的地方，仅此记录一下)</p>
<p>​        本来想用BeautifulSoup来爬取的，但是想到以后还得学习正则表达式，不如早点学早了事，下面是几个我遇到的问题.</p>
<ol>
<li><p>在使用re.findall()函数的时候若str直接用爬取的网页则会出现cannot use a string pattern on a bytes-like object错误，这个时候需要在后面加上decode(“utf-8”)来进行编码</p>
</li>
<li><p>re.match()返回的是match对象，这个时候若想输出string则需要用match.string的方法</p>
<p>(有什么想写的再写)</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python日记</title>
    <url>/2021/04/25/Python%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Python日记"><a href="#Python日记" class="headerlink" title="Python日记"></a>Python日记</h1><p>最近抽空学了一些爬虫有关的知识</p>
<p>写了一个可以对服务器发送post请求的小程序</p>
<pre><code class="python">import urllib
import urllib.request

def sendpost(url):
    head = &#123;
        &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36 Edg/88.0.705.74&quot;
        &#125;
    data = bytes(urllib.parse.urlencode(&#123;&quot;username&quot;:&quot;&quot;,&quot;password&quot;:&quot;&quot;&#125;),encoding = &quot;utf-8&quot;)
    request = urllib.request.Request(url,data=data,headers = head,method=&quot;post&quot;)
    response = urllib.request.urlopen(request)
    print(response.read())

if __name__ == &quot;__main__&quot;:
    sendpost(&quot;http://httpbin.org/post&quot;)
</code></pre>
<p>这个是urllib库写的，如果服务器有authorization验证还可以加一个base64库加密一下用户名和密码然后添加至header上</p>
<p>下面是基于requests库编写的功能差不多的小程序</p>
<pre><code class="python">import requests

def sendpost(url):
    head=&#123;
    &quot;ua&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36 Edg/88.0.705.74&quot;,
    &quot;Content-Type&quot;: &quot;application/json&quot;
    &#125;
    data=&#123;&quot;username&quot;:&quot;1&quot;,&quot;password&quot;:&quot;1&quot;&#125;
    try:
        request = requests.post(url=url,headers=head,data=data)
        print(request.content)
    except Exception:
        print(&quot;error&quot;,end=&quot;\n&quot;)

if __name__ == &quot;__main__&quot;:
    sendpost(&quot;http://httpbin.org/post&quot;)
</code></pre>
<p>相比较之下，我认为requests库较urllib库更易使用，并且当返回值不为200ok时，urllib库并不能(也可能是我没学到)提取服务器返回的错误json，而requests库却可以很轻松的使用json对象，并且requests库可以直接使用auth函数来实现上文中需要用base64库来完成的加密过程</p>
]]></content>
      <tags>
        <tag>程序,python</tag>
      </tags>
  </entry>
  <entry>
    <title>小记</title>
    <url>/2021/05/11/%E5%B0%8F%E8%AE%B0/</url>
    <content><![CDATA[<p>​    又是日常偶尔一更的博客</p>
<p>​    如果让我再做选择，还是更想回到小时候的生活</p>
<p>​    五月份的事情有点多，但也正是这些事情，让我看见了许多隐藏在深处的问题。</p>
<p>​    前几天又听见了洛仃洋的star moon sea，回想起了初中的那个傍晚，刚刚放学，我坐在阳台上，看着月亮，天空是深蓝色的，远处的天边微微发白，周围很静，只有昆虫的叫声，心里想着我对你的喜欢，时间好快，再看当时我的评论，已经是2016年。</p>
<p>​    哎，好好珍惜当下吧，说不定未来的时光还不如现在。</p>
]]></content>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>单链表</title>
    <url>/2021/02/13/%E5%8D%95%E9%93%BE%E8%A1%A8/</url>
    <content><![CDATA[<h2 id="简单的数据结构-gt-链表"><a href="#简单的数据结构-gt-链表" class="headerlink" title="简单的数据结构-&gt;链表"></a>简单的数据结构-&gt;链表</h2><p>内存由好几部分组成</p>
<table>
<thead>
<tr>
<th>代码区</th>
<th>全局区</th>
<th>常量区</th>
<th>栈区</th>
<th>堆区</th>
</tr>
</thead>
<tbody><tr>
<td>存储函数的二进制代码</td>
<td>存放全局变量</td>
<td>存储字符,常量</td>
<td>存放局部变量等(小)</td>
<td>人为分配(很大)</td>
</tr>
</tbody></table>
<p>链表里面的数据就是存储在堆区的</p>
<p>重要的内存分配函数malloc();</p>
<p>从堆区分配n字节的空间(void*)malloc(n);</p>
<p>下面是代码(请不要在意本人拙劣的技术)</p>
<pre><code>#include &lt;iostream&gt;
using namespace std;

struct node &#123;
    int x;
    int y;
    node* next;
&#125;;

struct list &#123;
    node* start;
    node* rear;
    int count;
&#125;;

void ini(list **plist)
&#123;
    (*plist) = (list*)malloc(sizeof(list));
    (*plist)-&gt;count = 0;
&#125;

void insert(node *pnode,list*plist)
&#123;
    pnode-&gt;x = rand() % 10;
    pnode-&gt;y = 99;
    if (plist-&gt;count != 0)
    &#123;
        pnode-&gt;next = plist-&gt;start;
        plist-&gt;start = pnode;
        plist-&gt;count++;
    &#125;
    else
    &#123;
        pnode-&gt;next = NULL;
        plist-&gt;rear = pnode;
        plist-&gt;start = pnode;
        plist-&gt;count = 1;
    &#125;
&#125;

void out(node* pnode, list* plist)
&#123;
    node* out;
    out = plist-&gt;start;
    printf(&quot;%d %d\n&quot;, out-&gt;x, out-&gt;y);
    for (int i = 1; i &lt; plist-&gt;count; i++)
    &#123;
        out = out-&gt;next;
        printf(&quot;%d %d\n&quot;, out-&gt;x, out-&gt;y);
    &#125;
&#125;

int main()
&#123;
    list* plist;
    ini(&amp;plist);
    node* pnode;

    for (int i = 0; i &lt;= 9; i++)
    &#123;
        pnode = (node*)malloc(sizeof(node));
        insert(pnode, plist);
    &#125;
    out(pnode, plist);
    cout &lt;&lt; plist-&gt;count;
    system(&quot;pause&quot;);
    return 0;
&#125;
</code></pre>
<p>有一些问题我记下来以后解决<br>1.初始化函数ini()无法以&amp;plist = (list*)malloc(sizeof(list));代替<br>2.pnode的原来的内存空间如果没有指针指向但是记住地址会不会被系统回收</p>
<p>问题一已经解决了，应该是plist = (list*)malloc(sizeof(list));因为plist本来就是结构指针，</p>
<p>指向一个结构体，应该是让他指向一个结构体，而&amp;plist是plist的地址，</p>
<p>只是一个指针指向结构体的起始位置，当然不能修改他自己的地址。</p>
]]></content>
      <tags>
        <tag>C艹</tag>
      </tags>
  </entry>
  <entry>
    <title>天边轻云</title>
    <url>/2020/06/06/%E5%A4%A9%E8%BE%B9%E8%BD%BB%E4%BA%91/</url>
    <content><![CDATA[<p>好久好久没写博客，现在的我已经上大学了。<br>犹记得，那年，我初三，刚开始写博客，热情似火，想把生活的一切都搬到博客上来<br>时至今日，我早已没有了当时的热情，也没有了空闲的时间<br>我是一名医学生<br>学业和生活逐渐吞噬了我自己的时光，我变得被动而又没有希望，没有希望在网上可以拥有自己的一片小天地<br>经过了那么长的时间，再次打开vs，熟悉的C艹发现，自己连头文件都忘了怎么写<br>匆匆的，打开淘宝，买了一本算法书搁置了一个星期也没有来得及看<br>基础化学，医用高等数学，医用物理学，大学英语，社团活动，组织班级班会，无时无刻不在吞噬着我的时光<br>转眼，期末了<br>希望在来年可以看见我自己的进步</p>
]]></content>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>山丹丹花开花又落，一年又一年</title>
    <url>/2021/02/13/%E5%B1%B1%E4%B8%B9%E4%B8%B9%E8%8A%B1%E5%BC%80%E8%8A%B1%E5%8F%88%E8%90%BD%EF%BC%8C%E4%B8%80%E5%B9%B4%E5%8F%88%E4%B8%80%E5%B9%B4/</url>
    <content><![CDATA[<blockquote>
<p>恍惚间 浸透了回忆</p>
</blockquote>
<h4 id="时间真的好快，2021的太阳没有什么迟疑照常升起，这已经是2021年了。"><a href="#时间真的好快，2021的太阳没有什么迟疑照常升起，这已经是2021年了。" class="headerlink" title="时间真的好快，2021的太阳没有什么迟疑照常升起，这已经是2021年了。"></a>时间真的好快，2021的太阳没有什么迟疑照常升起，这已经是2021年了。</h4><p>回忆还停留在昨天，晚上做梦都会梦到很多以前温暖的场景</p>
<p>成长的滋味，真的很不好受，大人想变回小孩，小孩想长成大人，到头来尽是围城一座</p>
<p>今天整理硬盘，想把过去几年写的博客都导到新网站上面，无聊翻硬盘间，翻到了自己小时候的成长记录，2003，2004…….好多的照片，好多的视频，但是仅仅点开一个，我的内心却已不忍再看，不知道是什么情绪，看着视频的场景，脑子里只有模糊的碎片记忆，有一点难受，大概是感慨时间之于记忆的冷酷，竟让现在的人可以毫无知觉的忘掉过去的许许多多的回忆，失去过去自己心中伟大的理想</p>
<p>唉，我仅仅是一个沙砾在岁月洪流中浮浮沉沉罢了</p>
<p>想起来《寻梦环游记》里引用《生命的清单》里的几句话，我认为可以作为结尾</p>
<h6 id="第一次，当你的心跳停止，呼吸消逝，你在生物学上被宣告了死亡。"><a href="#第一次，当你的心跳停止，呼吸消逝，你在生物学上被宣告了死亡。" class="headerlink" title="第一次，当你的心跳停止，呼吸消逝，你在生物学上被宣告了死亡。"></a>第一次，当你的心跳停止，呼吸消逝，你在生物学上被宣告了死亡。</h6><h6 id="第二次，当你下葬，人们穿着黑衣出席你的葬礼，他们宣告，你在这个社会上不复存在，你悄然离去。"><a href="#第二次，当你下葬，人们穿着黑衣出席你的葬礼，他们宣告，你在这个社会上不复存在，你悄然离去。" class="headerlink" title="第二次，当你下葬，人们穿着黑衣出席你的葬礼，他们宣告，你在这个社会上不复存在，你悄然离去。"></a>第二次，当你下葬，人们穿着黑衣出席你的葬礼，他们宣告，你在这个社会上不复存在，你悄然离去。</h6><h6 id="第三次，是这个世界上最后一个记得你的人，把你忘记，于是，你就真正地死去。整个宇宙都将不再和你有关。"><a href="#第三次，是这个世界上最后一个记得你的人，把你忘记，于是，你就真正地死去。整个宇宙都将不再和你有关。" class="headerlink" title="第三次，是这个世界上最后一个记得你的人，把你忘记，于是，你就真正地死去。整个宇宙都将不再和你有关。"></a>第三次，是这个世界上最后一个记得你的人，把你忘记，于是，你就真正地死去。整个宇宙都将不再和你有关。</h6>]]></content>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>岁月神偷</title>
    <url>/2021/02/06/%E5%B2%81%E6%9C%88%E7%A5%9E%E5%81%B7/</url>
    <content><![CDATA[<h2 id="措不及防的是时间"><a href="#措不及防的是时间" class="headerlink" title="措不及防的是时间"></a>措不及防的是时间</h2><p>好久好久又没有写博客了，<br>转眼间时间又过去了大半年，<br>想了想之前租的一年的学生机也快到期了，<br>与其这样浪费钱倒不如在github pages上写点东西(哈哈哈哈毕竟是免费的）</p>
<p>哎，时间是真的很快，有时候其实想写写博客的，<br>但是打开网站却又不知道该写点什么，看着对话框发呆，<br>这新的一年马上又要开始了。</p>
<p>希望可以在新的一年里可以好好写博客吧，<br>哈哈哈哈哈，从2016年到现在都快5年了，<br>换了好几家服务器供应商，还是没坚持下来<br>加油吧，我们</p>
]]></content>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>开学了</title>
    <url>/2021/03/06/%E5%BC%80%E5%AD%A6%E4%BA%86/</url>
    <content><![CDATA[<h1 id="开学了"><a href="#开学了" class="headerlink" title="开学了"></a>开学了</h1><p>2021年3月，已经是大一下学期了，这一学期的事情有点多，但是经过了大一上学期的磨练，我已经有些许适应了大学的生活，新学期加油吧</p>
]]></content>
  </entry>
  <entry>
    <title>给自己的博客加点料</title>
    <url>/2021/02/09/%E7%BB%99%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%8A%A0%E7%82%B9%E6%96%99/</url>
    <content><![CDATA[<h3 id="给自己的博客加点料"><a href="#给自己的博客加点料" class="headerlink" title="给自己的博客加点料"></a>给自己的博客加点料</h3><p>今天有点无聊，看着博客感觉缺了点什么，想了想便感觉应该加一个随机句子推荐，这样可以让博客更有一点文艺气息，但是，众所周知，Github Pages是不支持php的，但这也无妨，javascript依然可以做到相同的效果，但是本人拙劣的写代码技术于编译器后面了(哈哈哈哈哈哈)。</p>
<h2 id="第一步-寻找添加句子的区域"><a href="#第一步-寻找添加句子的区域" class="headerlink" title="第一步 寻找添加句子的区域"></a>第一步 寻找添加句子的区域</h2><p>首先打开hexo博客的自定义文件夹(这里以我用的white主题为例)，找到themes/(你的主题名)/layout/_partial接着找到header.ejs(footer也可以)用你自己的编辑器打开</p>
<h2 id="第二步-添加代码"><a href="#第二步-添加代码" class="headerlink" title="第二步 添加代码"></a>第二步 添加代码</h2><p>找到博客顶部名字的区域，尝试加一个新的段落</p>
<pre><code>&lt;div&gt;
........
&lt;p id=&quot;sentence&quot;&gt;测试&lt;/p&gt;
&lt;script src=&quot;/js/sen.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
</code></pre>
<p>在本地生成博客，自己观察，区域是不是合适，如果不合适，可以自己写一点style调整</p>
<h2 id="第三步-写js代码"><a href="#第三步-写js代码" class="headerlink" title="第三步 写js代码"></a>第三步 写js代码</h2><p>这里你们可以直接引用我的，就是在上述的script src=””里面把””里面改成<a href="https://wobisheng.github.io/js/sen.js">https://wobisheng.github.io/js/sen.js</a> 就可以了</p>
<p>当然你也可以自己写一点点代码放在主题的source/js文件夹里命名为sen.js</p>
<p>下面是具体代码(别在意我拙劣的代码技术)</p>
<pre><code>var number1 = Math.floor(Math.random() * 11);
number1 = number1 + 1;
if(number1 == 1)
&#123;document.getElementById(&quot;sentence&quot;).innerHTML=&quot;这城市风很大，孤独的人总是晚回家&quot;;&#125;
else if(number1 == 2)
&#123;document.getElementById(&quot;sentence&quot;).innerHTML=&quot;我们都生活在阴沟里，但仍有人仰望星空&quot;;&#125;
else if(number1 == 3)
&#123;document.getElementById(&quot;sentence&quot;).innerHTML=&quot;曾经以为，拥有是不容易的；后来才知道，原来舍弃更难。&quot;;&#125;
else if(number1 == 4)
&#123;document.getElementById(&quot;sentence&quot;).innerHTML=&quot;人间不会有单纯的快乐，快乐总夹杂着烦恼和忧虑，人间也没有永远&quot;;&#125;
else if(number1 == 5)
&#123;document.getElementById(&quot;sentence&quot;).innerHTML=&quot;珍惜身体，多锻炼，早睡早起，不停学习，不停旅行，即使腿脚未在路上，也要让心在路上&quot;;&#125;
else if(number1 == 6)
&#123;document.getElementById(&quot;sentence&quot;).innerHTML=&quot;就这样与你告别，借万里青山，以之为隔，世世不见。&quot;;&#125;
else if(number1 == 7)
&#123;document.getElementById(&quot;sentence&quot;).innerHTML=&quot;有一种感觉比失恋还要痛苦，叫做自作多情。&quot;;&#125;
else if(number1 == 8)
&#123;document.getElementById(&quot;sentence&quot;).innerHTML=&quot;活着不一定要鲜艳，但一定要有自己的颜色&quot;;&#125;
else if(number1 == 9)
&#123;document.getElementById(&quot;sentence&quot;).innerHTML=&quot;有时候，最痛苦的不是失去，而是得到以后并不快乐。&quot;;&#125;
else if(number1 == 10)
&#123;document.getElementById(&quot;sentence&quot;).innerHTML=&quot;不尝试着做些能力之外的事情，就永远无法成长。&quot;;&#125;
else if(number1 == 11)
&#123;document.getElementById(&quot;sentence&quot;).innerHTML=&quot;外界事物纷至沓来，我敞开所有感官来接纳，但来者全是客&quot;;&#125;
</code></pre>
<p>就那么多啦，谢谢大家</p>
<p>2月16日更新</p>
<p>看了LOGI大佬的评论，发现我还是短浅了，也没有代码优化意识</p>
<p>如果直接建立一个常量数组，那代码的效率会提升不少</p>
<p>而且可以直接在后面添加新的内容，不用去改前面的数字，很方便</p>
<p>代码如下</p>
<pre><code>const sentences = [&quot;这城市风很大，孤独的人总是晚回家&quot;, &quot;我们都生活在阴沟里，但仍有人仰望星空&quot;,&quot;曾经以为，拥有是不容易的；后来才知道，原来舍弃更难。&quot;,&quot;人间不会有单纯的快乐，快乐总夹杂着烦恼和忧虑，人间也没有永远&quot;,&quot;错落一身静宁，深海浮沉摘星&quot;,&quot;就这样与你告别，借万里青山，以之为隔，世世不见。&quot;,&quot;有一种感觉比失恋还要痛苦，叫做自作多情。&quot;,&quot;活着不一定要鲜艳，但一定要有自己的颜色&quot;,&quot;有时候，最痛苦的不是失去，而是得到以后并不快乐。&quot;,&quot;不尝试着做些能力之外的事情，就永远无法成长&quot;,&quot;外界事物纷至沓来，我敞开所有感官来接纳，但来者全是客&quot;];
document.getElementById(&quot;sentence&quot;).innerHTML = sentences[Math.floor(Math.random() * sentences.length)];
</code></pre>
]]></content>
      <tags>
        <tag>博客技术</tag>
      </tags>
  </entry>
</search>
